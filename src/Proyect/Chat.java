/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyect;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Font;
import java.io.File;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.ScrollPaneConstants;

/**
 *
 * @author anita
 */
public class Chat extends javax.swing.JFrame {

    private ClienteObjetoRemoto chatClient;
    public String nombre, msg;
    DefaultListModel modeloLista= new DefaultListModel();
    
    /**
     * Creates new form Chat
     */
    public Chat() {
        //this.chatClient=chatClient;
        initComponents();
        setLocationRelativeTo(null);

        
                addWindowListener(new java.awt.event.WindowAdapter() {
		    @Override
		    public void windowClosing(java.awt.event.WindowEvent windowEvent) {
		        
		    	if(chatClient != null){
			    	try {
			        	mandarMensaje("Adios a todos, Kuchao");
			        	chatClient.serverIF.salirDelChat(nombre);
					} catch (RemoteException e) {
						e.printStackTrace();
					}		        	
		        }
		        System.exit(0);  
		    }   
		});
        
    }
    
    public Chat(ClienteObjetoRemoto chatClients, String nombres) {
        this.chatClient=chatClients;
        initComponents();
        setLocationRelativeTo(null);
        this.nombre=nombres;
         mandarNombreIniciador();   
        
        

        
        addWindowListener(new java.awt.event.WindowAdapter() {
		    @Override
		    public void windowClosing(java.awt.event.WindowEvent windowEvent) {
		        
		    	if(chatClient != null){
			    	try {
			        	mandarMensaje("Adios a todos, Kuchao");
			        	chatClient.serverIF.salirDelChat(nombre);
					} catch (RemoteException e) {
						e.printStackTrace();
					}		        	
		        }
		        System.exit(0);  
		    }   
		});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaChat = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        mensaje = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        btnInbox = new javax.swing.JButton();
        btnBuscarArchivo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaUsuarios = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaChat.setColumns(20);
        areaChat.setRows(5);
        jScrollPane1.setViewportView(areaChat);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Usuarios conectados");

        mensaje.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        btnInbox.setText("Inbox");
        btnInbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInboxActionPerformed(evt);
            }
        });

        btnBuscarArchivo.setText("Buscar Archivo");
        btnBuscarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarArchivoActionPerformed(evt);
            }
        });

        listaUsuarios.setModel(modeloLista);
        jScrollPane3.setViewportView(listaUsuarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarArchivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInbox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnInbox)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarArchivo))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviar)
                    .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInboxActionPerformed
        
        int[] numeroLista = listaUsuarios.getSelectedIndices();
       String numeros="";
				
	for(int i=0; i<numeroLista.length; i++){
            numeros+=numeroLista[i]+", ";
	}
        
        msg = mensaje.getText();
        areaChat.append("[Servidor]: Mandaste -> "+msg+" a "+numeros+"\n");
	mensaje.setText("");
        
        if(!mensaje.isEnabled())
        {
            mensaje.setEnabled(true);
            mandarInboxArchivo(numeroLista);
               
        }
        else
        {
            mandarInbox(numeroLista);
        }
	
        
    }//GEN-LAST:event_btnInboxActionPerformed

    private void btnBuscarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarArchivoActionPerformed
             
        JFileChooser jf = new JFileChooser("ServidorArchivos/");
        jf.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        
        int seleccion= jf.showOpenDialog(this);
        if(seleccion == JFileChooser.APPROVE_OPTION)
        {
            File archivo = jf.getSelectedFile();
            String ruta2=archivo.getName();
            mensaje.setText("");
            mensaje.setText(ruta2);
            mensaje.setEnabled(false);
            
            //pasarArchivoATodos(ruta2);
        }
        

        
    }//GEN-LAST:event_btnBuscarArchivoActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        try {
            
            if(!mensaje.isEnabled())
            {
                mensaje.setEnabled(true);
               pasarArchivoATodos(mensaje.getText()); 
               mensaje.setText("");
               
            }
            else
            {
                msg = mensaje.getText();
                mensaje.setText("");
                mandarMensaje(msg);
                System.out.println("Mandando mensaje : " + msg);  
            }
            
            
            
        } catch (RemoteException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
			
    }//GEN-LAST:event_btnEnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chat().setVisible(true);
            }
        });
    }
    
    private void mandarNombreIniciador()
    {
                 try {                   
        
				if(nombre.length() != 0){
                                 
                                       setTitle("Chat de "+nombre);
                                       mensaje.setText("");
                                       //areaChat.append("username : " + nombre + " connecting to chat...\n");
                                       obtenerConexion(nombre);
                                       if(!chatClient.connectionProblem){
                                           btnBuscarArchivo.setEnabled(true);
                                           btnEnviar.setEnabled(true);
                                 
				}
				
                                       
                }
                                   } catch (RemoteException ex) {
                                       Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
                                   }
    
    }
    
    public void actualizarListaUsuarios(String[] currClients)
    {
        int i=0;
        for(String s : currClients){
            
        	modeloLista.addElement(i+". "+s);
                i++;
        }
        if(currClients.length > 1){
        	btnInbox.setEnabled(true);
                btnInbox.setEnabled(true);
        }
        
    }
    
    private void mandarMensaje(String chatMessage) throws RemoteException {
		chatClient.serverIF.cargarChat(nombre, chatMessage);
	}
    
    public void obtenerConexion(String userName) throws RemoteException{
		//remove whitespace and non word characters to avoid malformed url
		String cleanedUserName = userName.replaceAll("\\s+","_");
		cleanedUserName = userName.replaceAll("\\W+","_");
		try {		
			chatClient = new ClienteObjetoRemoto(this, cleanedUserName);
			chatClient.iniciarCliente();
		} catch (RemoteException e) {
			e.printStackTrace();
		}
	}
    
    ///////
    public void pasarArchivoATodos(String nombreArchivo)
    {
        try {
            chatClient.serverIF.pasarArchivosAUsuarios(nombreArchivo, nombre);
        } catch (RemoteException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
    
    public void mandarInboxArchivo(int[] numeroLista)
    {
        
        try {
            
            String mensajePrivado = "[Inbox de " + nombre + "] :  te mando el siguiente documento ->" + msg + "\n";
            chatClient.serverIF.mandarPrivadoInboxArchivo(numeroLista, mensajePrivado, msg);
            
        } catch (RemoteException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void mandarInbox(int[] numeroLista)
    {
        
        try {
            
            String mensajePrivado = "[Inbox de " + nombre + "] :" + msg + "\n";
            chatClient.serverIF.mandarPrivadoInbox(numeroLista, mensajePrivado);
            
        } catch (RemoteException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public boolean Validacion(String nombre)
    {
         boolean disponible=false;
        try {
            
            
            disponible = chatClient.serverIF.validarNombreUsuario(nombre);
            
             
        } catch (RemoteException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         return disponible;
    }
            
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea areaChat;
    public javax.swing.JButton btnBuscarArchivo;
    public javax.swing.JButton btnEnviar;
    public javax.swing.JButton btnInbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JList<String> listaUsuarios;
    public javax.swing.JTextField mensaje;
    // End of variables declaration//GEN-END:variables
}
